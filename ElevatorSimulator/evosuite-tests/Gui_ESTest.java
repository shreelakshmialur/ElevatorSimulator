/*
 * This file was automatically generated by EvoSuite
 * Thu Jan 25 20:22:26 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.DebugGraphics;
import javax.swing.JLayer;
import javax.swing.JPanel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import main.ElevatorCalls;
import model.Elevators;
import simulator.Gui;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Gui_ESTest extends Gui_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayList<Elevators> arrayList0 = new ArrayList<Elevators>();
      ElevatorCalls elevatorCalls0 = new ElevatorCalls();
      Gui gui0 = new Gui(arrayList0, elevatorCalls0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        gui0.paintComponent(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JLayer<Frame> jLayer0 = new JLayer<Frame>((Frame) null);
      JPanel jPanel0 = jLayer0.getGlassPane();
      // Undeclared exception!
      try { 
        Gui.intButtons(jPanel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gui", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayList<Elevators> arrayList0 = new ArrayList<Elevators>();
      Elevators elevators0 = new Elevators(0);
      arrayList0.add(elevators0);
      Gui gui0 = new Gui(arrayList0);
      Gui.intButtons(gui0);
      assertTrue(gui0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayList<Elevators> arrayList0 = new ArrayList<Elevators>();
      ElevatorCalls elevatorCalls0 = new ElevatorCalls();
      Gui gui0 = new Gui(arrayList0, elevatorCalls0);
      Gui.extButtons(gui0);
      assertFalse(gui0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayList<Elevators> arrayList0 = new ArrayList<Elevators>();
      // Undeclared exception!
      try { 
        Gui.createGraphics(arrayList0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayList<Elevators> arrayList0 = new ArrayList<Elevators>();
      Gui gui0 = new Gui(arrayList0);
      // Undeclared exception!
      try { 
       
       // fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gui", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArrayList<Elevators> arrayList0 = new ArrayList<Elevators>();
      ElevatorCalls elevatorCalls0 = new ElevatorCalls();
      Gui gui0 = new Gui(arrayList0, elevatorCalls0);
    //  Gui.animate(gui0, gui0);
      assertFalse(gui0.isFocusTraversalPolicySet());
  }
}
